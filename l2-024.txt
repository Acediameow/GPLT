#include<bits/stdc++.h>
using namespace std;
const int maxn = 1e5 + 5;
int f[maxn];
int vis[maxn];

int findf(int a)
{
    if(a == f[a])
        return a;
    else
    {
        f[a] = findf(f[a]);
        return findf(f[a]);
    }
}

void Union(int a, int b)
{
    int aa = findf(a);
    int bb = findf(b);
    if(aa != bb)
        f[aa] = bb;
}

void init()
{
    for(int i = 0; i < maxn; ++ i)
        f[i] = i;
}

int main()
{
    int n;
    cin >> n;
    init();
    memset(vis, 0, sizeof(vis));
    for(int i = 0; i < n; ++i)
    {
        int k;
        cin >> k;
        int a;
        cin >> a;
        vis[a] = 1;
        for(int j = 0; j < k - 1; ++ j)
        {
            int b;
            cin >> b;
            vis[b] = 1;
            Union(a, b);
        }
    }
    int num = 0;
    for(int i = 0; i < maxn; ++i)
    {
        if(vis[i] == 1)
        {
            num ++ ;  //成员总人数
        }
    }
    int cnt = 0;
    for(int i = 1; i <= num; ++ i)
    {
        if(f[i] == i)
            cnt ++ ;
    }
    cout << num << " " << cnt << endl;
    int m;
    cin >> m;
    while(m --)
    {
        int l, r;
        cin >> l >> r;
        if(findf(l) == findf(r))
            cout << "Y" << endl;
        else
            cout << "N" << endl;
    }
    return 0;
}